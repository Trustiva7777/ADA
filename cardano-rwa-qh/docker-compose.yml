version: "3.9"

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"
    labels: "service=cardano-rwa"

services:
  cardano-node:
    image: inputoutput/cardano-node:8.11.0
    container_name: cardano-node
    user: "1000:1000"  # Run as non-root user
    environment:
      - NETWORK=preview
    ports:
      - "3001:3001"
    volumes:
      - node-db:/data
      - node-ipc:/ipc
    networks:
      - cardano-net
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    restart: unless-stopped
    logging: *default-logging
    healthcheck:
      test: ["CMD", "sh", "-c", "ls /ipc/node.socket"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  ogmios:
    image: cardanosolutions/ogmios:v6.7.0
    container_name: ogmios
    user: "1000:1000"  # Run as non-root user
    depends_on:
      cardano-node:
        condition: service_healthy
    environment:
      - OGMIOS_NETWORK=preview
      - OGMIOS_NODE_SOCKET=/ipc/node.socket
    volumes:
      - node-ipc:/ipc
    ports:
      - "127.0.0.1:1337:1337"  # Bind to localhost only
    networks:
      - cardano-net
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    restart: unless-stopped
    logging: *default-logging
    command: ["--node-socket", "/ipc/node.socket", "--host", "0.0.0.0", "--port", "1337"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:1337/health"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 20s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  kupo:
    image: cardanosolutions/kupo:v2.8.0
    container_name: kupo
    user: "1000:1000"  # Run as non-root user
    depends_on:
      cardano-node:
        condition: service_healthy
    command: [
      "--node-socket", "/ipc/node.socket",
      "--host", "0.0.0.0",
      "--port", "1442",
      "--match", ".*",
      "--since", "origin"
    ]
    volumes:
      - node-ipc:/ipc
      - kupo-db:/var/lib/kupo
    ports:
      - "127.0.0.1:1442:1442"  # Bind to localhost only
    networks:
      - cardano-net
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    restart: unless-stopped
    logging: *default-logging
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:1442"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  submit-api:
    image: inputoutput/cardano-submit-api:2.0.0
    container_name: cardano-submit-api
    user: "1000:1000"  # Run as non-root user
    depends_on:
      cardano-node:
        condition: service_healthy
    environment:
      - CARDANO_NODE_SOCKET_PATH=/ipc/node.socket
    volumes:
      - node-ipc:/ipc
    ports:
      - "127.0.0.1:8090:8090"  # Bind to localhost only
    networks:
      - cardano-net
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    restart: unless-stopped
    logging: *default-logging
    command: ["--socket-path", "/ipc/node.socket", "--host", "0.0.0.0", "--port", "8090"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:8090/health"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 15s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    logging: *default-logging
    networks:
      - cardano-net
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      prometheus:
        condition: service_started
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    restart: unless-stopped
    logging: *default-logging
    networks:
      - cardano-net
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

volumes:
  node-db:
  node-ipc:
  kupo-db:
  prometheus-data:
  grafana-data:

networks:
  cardano-net:
    driver: bridge
    internal: true  # Isolate from external networks
